{"ast":null,"code":"import { createStore } from 'redux';\n\nfunction getdate() {\n  const date = new Date();\n  const YYYY = date.getFullYear();\n  var MM = date.getMonth() + 1;\n  var DD = date.getDate();\n\n  if (MM < 10) {\n    MM = \"0\" + MM;\n  }\n\n  if (DD < 10) {\n    DD = \"0\" + DD;\n  }\n\n  return MM + \"-\" + DD + \"-\" + YYYY;\n}\n\nconst initialData = {\n  1: {\n    id: 1,\n    title: 'A bug in Top Page',\n    status: 'Open',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    ctuser: '',\n    ctdate: getdate(),\n    update: getdate()\n  },\n  2: {\n    id: 2,\n    title: 'A problem of performance in Top Page',\n    status: 'Open',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    ctuser: '',\n    ctdate: getdate(),\n    update: getdate()\n  },\n  3: {\n    id: 3,\n    title: 'fix layout',\n    status: 'Open',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    ctuser: '',\n    ctdate: getdate(),\n    update: getdate()\n  }\n};\nconst initialState = {\n  index: Object.values(initialData).length,\n  data: initialData\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = { ...state\n  };\n\n  switch (action.type) {\n    case 'add_issue':\n      const {\n        title,\n        description\n      } = action.payload || {};\n      newState.index++;\n      newState.data[newState.index] = {\n        id: newState.index,\n        title: title,\n        status: 'Open',\n        ctuser: \"\",\n        ctdate: getdate(),\n        update: getdate()\n      };\n      return newState;\n\n    case 'filter_issue':\n      const {\n        greptxt\n      } = action.payload || {};\n      console.log(newState.data);\n      newState = newState.data.filter(function (value) {\n        return value.title.includes(greptxt);\n      });\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/store.js"],"names":["createStore","getdate","date","Date","YYYY","getFullYear","MM","getMonth","DD","getDate","initialData","id","title","status","description","ctuser","ctdate","update","initialState","index","Object","values","length","data","reducer","state","action","newState","type","payload","greptxt","console","log","filter","value","includes","store"],"mappings":"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","sourcesContent":["import { createStore } from 'redux';\n\nfunction getdate(){\n  const date = new Date();\n  const YYYY = date.getFullYear();\n  var MM = date.getMonth()+1;\n  var DD = date.getDate();\n  \n  if(MM <10){\n    MM = \"0\" + MM;\n  }\n  if(DD < 10){\n    DD = \"0\" + DD;\n  }\n\n  return MM + \"-\" + DD + \"-\" + YYYY;\n}\n\nconst initialData = {\n     1:{\n      id: 1,\n      title: 'A bug in Top Page',\n      status: 'Open',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n      ctuser: '',\n      ctdate: getdate(),\n      update: getdate(),\n    },\n    2:{\n      id: 2,\n      title: 'A problem of performance in Top Page',\n      status: 'Open',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n      ctuser: '',\n      ctdate: getdate(),\n      update: getdate(),\n    },\n    3:{\n      id: 3,\n      title: 'fix layout',\n      status: 'Open',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n      ctuser: '',\n      ctdate: getdate(),\n      update: getdate(),\n    },\n};\n\nconst initialState = {\n  index: Object.values(initialData).length,\n  data: initialData\n}\n\nconst reducer = (state = initialState, action) => {\n  let newState = {...state}\n  switch (action.type) {\n    case 'add_issue':\n      const { title, description } = action.payload || {}\n      newState.index++\n      newState.data[newState.index] = { id: newState.index, title: title, status: 'Open', ctuser: \"\", ctdate: getdate(), update: getdate()};\n    return newState;\n    case 'filter_issue':\n      const { greptxt } = action.payload || {}\n      console.log(newState.data)\n      newState = newState.data.filter( function( value ) {\n        return value.title.includes(greptxt)\n    })\n    return newState\n    default:\n    return state;\n  }\n};\n\nconst store = createStore(reducer);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}