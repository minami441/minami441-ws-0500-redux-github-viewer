{"ast":null,"code":"import { createStore } from \"redux\";\nimport user from \"./User.js\";\n\nfunction getdate() {\n  const date = new Date();\n  const YYYY = date.getFullYear();\n  var MM = date.getMonth() + 1;\n  var DD = date.getDate();\n\n  if (MM < 10) {\n    MM = \"0\" + MM;\n  }\n\n  if (DD < 10) {\n    DD = \"0\" + DD;\n  }\n\n  return MM + \"-\" + DD + \"-\" + YYYY;\n}\n\nlet initialData = {\n  index: 3,\n  1: {\n    id: 1,\n    title: \"A bug in Top Page\",\n    status: 0,\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    ctuser: \"\",\n    ctdate: getdate(),\n    update: getdate()\n  },\n  2: {\n    id: 2,\n    title: \"A problem of performance in Top Page\",\n    status: 0,\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    ctuser: \"\",\n    ctdate: getdate(),\n    update: getdate()\n  },\n  3: {\n    id: 3,\n    title: \"fix layout\",\n    status: 0,\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    ctuser: \"\",\n    ctdate: getdate(),\n    update: getdate()\n  }\n};\n/*\ninitialData = {\n  index: Object.values(initialData).length,\n  data: initialData,\n};\n*/\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"add_issue\":\n      const {\n        title,\n        description\n      } = action.payload || {};\n      let newState = { ...state\n      };\n      newState.data[newState.index++] = {\n        id: newState.index,\n        title: title,\n        description: description,\n        status: 0,\n        ctuser: user.name,\n        ctdate: getdate(),\n        update: getdate()\n      };\n      return newState;\n\n    /*\n      const { title, description } = action.payload || {};\n      initialData.data[index] = {\n        id: index,\n        title: title,\n        description: description,\n        status: 0,\n        ctuser: user.name,\n        ctdate: getdate(),\n        update: getdate(),\n      };\n      initialData.index++;\n      return initialData;\n      */\n\n    case \"filter_issue\":\n      const greptxt = action.payload;\n      newState.data = Object.values(initialData.data).filter(function (value) {\n        return value.title.includes(greptxt);\n      });\n      return newState;\n\n    case \"edit_issue\":\n      const {\n        id,\n        textedit,\n        descriptionedit,\n        statusedit\n      } = action.payload;\n      initialData.data[id].title = textedit;\n      initialData.data[id].description = descriptionedit;\n      initialData.data[id].status = statusedit;\n      return initialData;\n\n    case \"delete_issue\":\n      const delete_id = action.payload;\n      delete_id.forEach(e => delete initialData.data[e]);\n      newState.data = Object.values(initialData.data);\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/store/Store.js"],"names":["createStore","user","getdate","date","Date","YYYY","getFullYear","MM","getMonth","DD","getDate","initialData","index","id","title","status","description","ctuser","ctdate","update","reducer","state","action","type","payload","newState","data","name","greptxt","Object","values","filter","value","includes","textedit","descriptionedit","statusedit","delete_id","forEach","e","store"],"mappings":"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","sourcesContent":["import { createStore } from \"redux\";\nimport user from \"./User.js\";\n\nfunction getdate() {\n  const date = new Date();\n  const YYYY = date.getFullYear();\n  var MM = date.getMonth() + 1;\n  var DD = date.getDate();\n\n  if (MM < 10) {\n    MM = \"0\" + MM;\n  }\n  if (DD < 10) {\n    DD = \"0\" + DD;\n  }\n\n  return MM + \"-\" + DD + \"-\" + YYYY;\n}\n\nlet initialData = {\n  index: 3,\n  1: {\n    id: 1,\n    title: \"A bug in Top Page\",\n    status: 0,\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    ctuser: \"\",\n    ctdate: getdate(),\n    update: getdate(),\n  },\n  2: {\n    id: 2,\n    title: \"A problem of performance in Top Page\",\n    status: 0,\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    ctuser: \"\",\n    ctdate: getdate(),\n    update: getdate(),\n  },\n  3: {\n    id: 3,\n    title: \"fix layout\",\n    status: 0,\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    ctuser: \"\",\n    ctdate: getdate(),\n    update: getdate(),\n  },\n};\n/*\ninitialData = {\n  index: Object.values(initialData).length,\n  data: initialData,\n};\n*/\nconst reducer = (state = initialData, action) => {\n  switch (action.type) {\n    case \"add_issue\":\n      const { title, description } = action.payload || {};\n      let newState = { ...state };\n      newState.data[newState.index++] = {\n        id: newState.index,\n        title: title,\n        description: description,\n        status: 0,\n        ctuser: user.name,\n        ctdate: getdate(),\n        update: getdate(),\n      };\n      return newState;\n    /*\n      const { title, description } = action.payload || {};\n      initialData.data[index] = {\n        id: index,\n        title: title,\n        description: description,\n        status: 0,\n        ctuser: user.name,\n        ctdate: getdate(),\n        update: getdate(),\n      };\n      initialData.index++;\n      return initialData;\n      */\n    case \"filter_issue\":\n      const greptxt = action.payload;\n      newState.data = Object.values(initialData.data).filter(function (value) {\n        return value.title.includes(greptxt);\n      });\n      return newState;\n    case \"edit_issue\":\n      const { id, textedit, descriptionedit, statusedit } = action.payload;\n      initialData.data[id].title = textedit;\n      initialData.data[id].description = descriptionedit;\n      initialData.data[id].status = statusedit;\n      return initialData;\n    case \"delete_issue\":\n      const delete_id = action.payload;\n      delete_id.forEach((e) => delete initialData.data[e]);\n      newState.data = Object.values(initialData.data);\n      return newState;\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}