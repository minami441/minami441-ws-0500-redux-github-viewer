{"ast":null,"code":"import { createStore } from 'redux';\n\nfunction getdate() {\n  const date = new Date();\n  const YYYY = date.getFullYear();\n  var MM = date.getMonth() + 1;\n  var DD = date.getDate();\n\n  if (MM < 10) {\n    MM = \"0\" + MM;\n  }\n\n  if (DD < 10) {\n    DD = \"0\" + DD;\n  }\n\n  return MM + \"-\" + DD + \"-\" + YYYY;\n}\n\nconst initialData = {\n  user: {\n    name: 'jiro',\n    mail: 'hoge@example.com'\n  },\n  issue: {\n    1: {\n      id: 1,\n      title: 'A bug in Top Page',\n      status: 'Open',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n      ctuser: '',\n      ctdate: getdate(),\n      update: getdate()\n    },\n    2: {\n      id: 2,\n      title: 'A problem of performance in Top Page',\n      status: 'Open',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n      ctuser: '',\n      ctdate: getdate(),\n      update: getdate()\n    },\n    3: {\n      id: 3,\n      title: 'fix layout',\n      status: 'Open',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n      ctuser: '',\n      ctdate: getdate(),\n      update: getdate()\n    }\n  }\n};\nconst initialState = {\n  index: Object.values(initialData).length,\n  data: initialData\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = { ...state\n  };\n\n  switch (action.type) {\n    case 'add_issue':\n      const {\n        title,\n        description\n      } = action.payload || {};\n      newState.index++;\n      console.log(newState);\n      return newState;\n\n    case 'filter_issue':\n      const greptxt = action.payload;\n      if (!greptxt) return initialState;\n      newState.data.issue = Object.values(initialData.issue).filter(function (value) {\n        return value.title.includes(greptxt);\n      });\n      return newState;\n\n    case 'delete_issue':\n    case 'edit_issue':\n      const {\n        id,\n        titleedit,\n        descriptionedit\n      } = action.payload || {};\n      newState.data.issue[id].title = titleedit;\n      newState.data.issue[id].description = descriptionedit;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/store.js"],"names":["createStore","getdate","date","Date","YYYY","getFullYear","MM","getMonth","DD","getDate","initialData","user","name","mail","issue","id","title","status","description","ctuser","ctdate","update","initialState","index","Object","values","length","data","reducer","state","action","newState","type","payload","console","log","greptxt","filter","value","includes","titleedit","descriptionedit","store"],"mappings":"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","sourcesContent":["import { createStore } from 'redux';\n\nfunction getdate(){\n  const date = new Date();\n  const YYYY = date.getFullYear();\n  var MM = date.getMonth()+1;\n  var DD = date.getDate();\n  \n  if(MM <10){\n    MM = \"0\" + MM;\n  }\n  if(DD < 10){\n    DD = \"0\" + DD;\n  }\n\n  return MM + \"-\" + DD + \"-\" + YYYY;\n}\n\nconst initialData = {\n  user:{\n      name: 'jiro',\n      mail: 'hoge@example.com',\n  },\n  issue:{\n     1:{\n      id: 1,\n      title: 'A bug in Top Page',\n      status: 'Open',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n      ctuser: '',\n      ctdate: getdate(),\n      update: getdate(),\n    },\n    2:{\n      id: 2,\n      title: 'A problem of performance in Top Page',\n      status: 'Open',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n      ctuser: '',\n      ctdate: getdate(),\n      update: getdate(),\n    },\n    3:{\n      id: 3,\n      title: 'fix layout',\n      status: 'Open',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n      ctuser: '',\n      ctdate: getdate(),\n      update: getdate(),\n    },\n  }\n};\n\nconst initialState = {\n  index: Object.values(initialData).length,\n  data: initialData\n}\n\nconst reducer = (state = initialState, action) => {\n  let newState = {...state}\n  switch (action.type) {\n    case 'add_issue':\n      const { title, description } = action.payload || {}\n      newState.index++\n     console.log(newState)\n      return newState;\n    case 'filter_issue':\n      const greptxt = action.payload\n      if(!greptxt) return initialState;\n      newState.data.issue = Object.values(initialData.issue).filter( function( value ) {\n        return value.title.includes(greptxt)\n      })\n      return newState\n    case 'delete_issue':\n    case 'edit_issue':\n      const { id,titleedit, descriptionedit } = action.payload || {}\n      newState.data.issue[id].title = titleedit\n      newState.data.issue[id].description = descriptionedit\n      return newState\n    default:\n    return state;\n  }\n};\n\nconst store = createStore(reducer);\nexport default store;"]},"metadata":{},"sourceType":"module"}