{"ast":null,"code":"var _jsxFileName = \"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/ActionButtons.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport Newbutton from '../atoms/newbuton';\nimport Deletebutton from '../atoms/deletebutton';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionButton = styled.div`\n    display: flex;\n`;\n_c = ActionButton;\n\nconst ActionButtons = delete_issue => {\n  _s();\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const Deleteissue = () => {\n    delete_issue(check);\n    setcheck([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ActionButton, {\n    children: [/*#__PURE__*/_jsxDEV(Newbutton, {\n      onClick: () => setIsOpen(true),\n      children: \"New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Deletebutton, {\n      onClick: () => Deleteissue(),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActionButtons, \"EOxo+0MXKxyCdUCTWpcfchJ0gFI=\");\n\n_c2 = ActionButtons;\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    delete_issue: list => dispatch({\n      type: 'delete_issue',\n      payload: list\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionButtons);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActionButton\");\n$RefreshReg$(_c2, \"ActionButtons\");","map":{"version":3,"sources":["/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/ActionButtons.js"],"names":["styled","Newbutton","Deletebutton","connect","React","ActionButton","div","ActionButtons","delete_issue","modalIsOpen","setIsOpen","useState","Deleteissue","check","setcheck","mapStateToProps","mapDispatchToProps","dispatch","list","type","payload"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGL,MAAM,CAACM,GAAI;AAChC;AACA,CAFA;KAAMD,Y;;AAIN,MAAME,aAAa,GAAIC,YAAD,IAAkB;AAAA;;AACpC,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAjC;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtBJ,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAHD;;AAKA,sBACA,QAAC,YAAD;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAMJ,SAAS,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAME,WAAW,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH,CAdD;;GAAML,a;;MAAAA,a;;AAgBN,MAAMQ,eAAe,GAAG,MAAM;AAC1B,SAAO,EAAP;AACD,CAFH;;AAIE,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLT,IAAAA,YAAY,EAAGU,IAAD,IAAUD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAEF;AAAjC,KAAD;AAD3B,GAAP;AAGD,CAJD;;AAMA,eAAef,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,aAA7C,CAAf","sourcesContent":["import styled from 'styled-components';\nimport Newbutton from '../atoms/newbuton';\nimport Deletebutton from '../atoms/deletebutton';\nimport { connect } from 'react-redux';\nimport React from 'react';\n\nconst ActionButton = styled.div`\n    display: flex;\n`;\n\nconst ActionButtons = (delete_issue) => {\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n\n    const Deleteissue = () => {\n        delete_issue(check)\n        setcheck([]);\n    }\n\n    return(\n    <ActionButton>\n        <Newbutton onClick={() => setIsOpen(true)}>New</Newbutton>\n        <Deletebutton onClick={() => Deleteissue()}>Delete</Deletebutton>\n    </ActionButton>\n    )\n}\n\nconst mapStateToProps = () => {\n    return {};\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      delete_issue: (list) => dispatch({ type: 'delete_issue', payload: list }),\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(ActionButtons);\n  "]},"metadata":{},"sourceType":"module"}