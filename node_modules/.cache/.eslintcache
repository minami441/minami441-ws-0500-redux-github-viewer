[{"/Users/minami/Desktop/redux-github-viewer/src/index.js":"1","/Users/minami/Desktop/redux-github-viewer/src/App.js":"2","/Users/minami/Desktop/redux-github-viewer/src/reportWebVitals.js":"3","/Users/minami/Desktop/redux-github-viewer/src/components/templates/home.js":"4","/Users/minami/Desktop/redux-github-viewer/src/components/templates/profile.js":"5","/Users/minami/Desktop/redux-github-viewer/src/components/templates/pullrequest.js":"6","/Users/minami/Desktop/redux-github-viewer/src/components/store.js":"7","/Users/minami/Desktop/redux-github-viewer/src/components/templates/issue.js":"8","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/index.js":"9","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/App.js":"10","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/reportWebVitals.js":"11","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/store.js":"12","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/home.js":"13","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/profile.js":"14","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/pullrequest.js":"15","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/issue.js":"16","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/user.js":"17","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/searchblock.js":"18","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/searchinput.js":"19","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/checkbox.js":"20","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/button.js":"21","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/organisms/inheader.js":"22","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/ActionButtons.js":"23","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/description.js":"24","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/titleform.js":"25","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/titlelabel.js":"26","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/titleblock.js":"27","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/descriptionblock.js":"28","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/Titleblock.js":"29","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/select_status.js":"30","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/Statusblock.js":"31","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/alerttext.js":"32","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/Alertblock.js":"33"},{"size":550,"mtime":1652184318685,"results":"34","hashOfConfig":"35"},{"size":3445,"mtime":1652579672518,"results":"36","hashOfConfig":"35"},{"size":364,"mtime":1650156905045,"results":"37","hashOfConfig":"35"},{"size":2492,"mtime":1652579534114,"results":"38","hashOfConfig":"35"},{"size":1661,"mtime":1652103275284,"results":"39","hashOfConfig":"35"},{"size":415,"mtime":1651579703625,"results":"40","hashOfConfig":"35"},{"size":921,"mtime":1652589222537,"results":"41","hashOfConfig":"35"},{"size":9033,"mtime":1652584074523,"results":"42","hashOfConfig":"35"},{"size":550,"mtime":1652605518757,"results":"43","hashOfConfig":"44"},{"size":3445,"mtime":1652605544869,"results":"45","hashOfConfig":"44"},{"size":364,"mtime":1650156905045,"results":"46","hashOfConfig":"44"},{"size":2330,"mtime":1653481268904,"results":"47","hashOfConfig":"44"},{"size":2412,"mtime":1658112621998,"results":"48","hashOfConfig":"44"},{"size":1876,"mtime":1653218616103,"results":"49","hashOfConfig":"44"},{"size":415,"mtime":1652612817000,"results":"50","hashOfConfig":"44"},{"size":9056,"mtime":1659266128247,"results":"51","hashOfConfig":"44"},{"size":84,"mtime":1653217291788,"results":"52","hashOfConfig":"44"},{"size":594,"mtime":1654703586135,"results":"53","hashOfConfig":"44"},{"size":209,"mtime":1654172846794,"results":"54","hashOfConfig":"44"},{"size":100,"mtime":1654312652679,"results":"55","hashOfConfig":"44"},{"size":544,"mtime":1659264446001,"results":"56","hashOfConfig":"44"},{"size":1411,"mtime":1659264431447,"results":"57","hashOfConfig":"44"},{"size":651,"mtime":1658117222863,"results":"58","hashOfConfig":"44"},{"size":266,"mtime":1654700837209,"results":"59","hashOfConfig":"44"},{"size":227,"mtime":1659264417541,"results":"60","hashOfConfig":"44"},{"size":131,"mtime":1659264576885,"results":"61","hashOfConfig":"44"},{"size":847,"mtime":1659247801188,"results":"62","hashOfConfig":"44"},{"size":978,"mtime":1659265466247,"results":"63","hashOfConfig":"44"},{"size":847,"mtime":1659247801188,"results":"64","hashOfConfig":"44"},{"size":278,"mtime":1659266218291,"results":"65","hashOfConfig":"44"},{"size":481,"mtime":1659266239318,"results":"66","hashOfConfig":"44"},{"size":193,"mtime":1659252407937,"results":"67","hashOfConfig":"44"},{"size":388,"mtime":1659252428355,"results":"68","hashOfConfig":"44"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1lcd5aq",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"119aix4",{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/minami/Desktop/redux-github-viewer/src/index.js",[],[],["178","179","180","181","182"],"/Users/minami/Desktop/redux-github-viewer/src/App.js",[],[],"/Users/minami/Desktop/redux-github-viewer/src/reportWebVitals.js",[],[],["183","184","185","186","187"],"/Users/minami/Desktop/redux-github-viewer/src/components/templates/home.js",[],[],"/Users/minami/Desktop/redux-github-viewer/src/components/templates/profile.js",[],[],"/Users/minami/Desktop/redux-github-viewer/src/components/templates/pullrequest.js",[],[],"/Users/minami/Desktop/redux-github-viewer/src/components/store.js",[],[],"/Users/minami/Desktop/redux-github-viewer/src/components/templates/issue.js",["188"],[],"import styled, { createGlobalStyle } from 'styled-components';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport Modal from 'react-modal';\n\nconst Section = styled.div`\n  padding: 16px;\n`;\n\nconst Container = styled.div`\n  padding: 16px;\n  margin-top: 16px;\n`;\n\nconst Action = styled.div``;\n\nconst Inheader = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n`;\n\nconst Issueheader = styled.h2``;\n\nconst Searchblock = styled.div`\n  padding: 8px 16px;\n  display: flex;\n  width: 100%;\n  .text-field-container {\n    width: 100%;\n  }\n`;\n\nconst Searchtext = styled.div`\n  border-radius: 6px;\n  border: 1px solid rgb(225, 228, 232);\n`;\n\nconst Searchinput = styled.input`\n  padding: 8px;\n  border: none;\n  outline: none;\n  background: none;\n  font-size: 1rem;\n  width: 100%;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n`;\n\nconst Newbutton = styled.a`\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  text-align: center;\n  padding: 4px 16px;\n  margin: 4px;\n  min-width: 100px;\n  border-radius: 6px;\n  color: white;\n  font-size: 1rem;\n  background: rgb(66, 195, 96);\n  border-bottom: 2px solid rgb(40, 167, 69);\n`;\n\nconst Deletebutton = styled.a`\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  text-align: center;\n  padding: 4px 16px;\n  margin: 4px;\n  min-width: 100px;\n  border-radius: 6px;\n  color: white;\n  font-size: 1rem;\n  background: rgb(215, 58, 73);\n  border-bottom: 2px solid rgb(175, 28, 42);\n`;\n\nconst Lists = styled.div`\n  overflow: scroll;\n`;\n\nconst Issuetable = styled.table`\n  border: 1px solid rgb(225, 228, 232);\n  border-radius: 6px;\n\n  th:first-child,\n  td:first-child {\n    min-width: auto;\n  }\n\n  th,\n  td {\n    padding: 8px;\n    text-align: left;\n    min-width: 10rem;\n    border-bottom: 1px solid rgb(225, 228, 232);\n  }\n`;\n\nconst Issuetr = styled.tr`\n  cursor: pointer;\n`;\n\nconst Modallabel = styled.div`\n  max-width: 598px;\n  margin: auto;\n  textarea {\n    min-height: 150px;\n  }\n  a {\n    width: auto;\n  }\n`;\n\nconst Modallabeltext = styled.h2`\n  padding: 0px 8px;\n`;\n\nconst Modalcontents = styled.div`\n  padding: 32px 0px 16px;\n`;\n\nconst Modalcontentstitle = styled.div`\n  padding: 16px;\n`;\n\nconst Modalcontentstitlelabel = styled.label`\n  display: block;\n  padding: 8px 0px;\n`;\n\nconst Modalcontentstitleinput = styled.div`\n  border-radius: 6px;\n  border: 1px solid rgb(225, 228, 232);\n`;\n\nconst Modalcontentstitleinputtext = styled.input`\n  padding: 8px;\n  border: none;\n  outline: none;\n  background: none;\n  font-size: 1rem;\n  width: 100%;\n`;\n\nconst Modalcontentsdescription = styled.div`\n  padding: 16px;\n`;\n\nconst Modalcontentsdescriptiontitle = styled.label`\n  display: block;\n  padding: 8px 0px;\n`;\n\nconst Modalcontentsdescriptiontext = styled.div`\n  border-radius: 6px;\n  border: 1px solid rgb(225, 228, 232);\n`;\n\nconst Modalcontentsdescriptionyextarea = styled.textarea`\n  padding: 8px;\n  border: none;\n  outline: none;\n  background: none;\n  font-size: 1rem;\n  width: 100%;\n`;\n\nconst Modalbuttons = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: end;\n  justify-content: flex-end;\n  padding: 8px;\n`;\n\nconst Modalbuttoncreate = styled.a`\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  text-align: center;\n  padding: 4px 16px;\n  margin: 4px;\n  min-width: 100px;\n  border-radius: 6px;\n  color: white;\n  font-size: 1rem;\n  background: rgb(66, 195, 96);\n  border-bottom: 2px solid rgb(40, 167, 69);\n`;\n\nconst Modalbuttonexit = styled.a`\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  text-align: center;\n  padding: 4px 16px;\n  margin: 4px;\n  min-width: 100px;\n  border-radius: 6px;\n  font-size: 1rem;\n`;\n\nconst Alert = styled.div`\n  padding: 16px;\n  min-height: 100px;\n`;\n\nconst Alerttext = styled.p`\n  color: rgb(215, 58, 73);\n  background: rgba(215, 58, 73, 0.35);\n  padding: 8px;\n  border-radius: 6px;\n`;\nconst GlobalStyle = createGlobalStyle`\n  @media (max-width: 576px) {\n    .ReactModal__Content {\n      width: 100%;\n      right: 0px !important;\n      left: 0px !important;\n    }\n  }\n  .ReactModal__Content {\n    margin: auto;\n    width: 60%;\n  }\n`;\n\nconst customStyles = {\n  content: {\n    position: 'absolute',\n    inset: '40px',\n    border: '1px solid rgb(204, 204, 204)',\n    background: 'rgb(255, 255, 255)',\n    overflow: 'auto',\n    borderradius: '4px',\n    outline: 'none',\n    padding: '20px',\n  },\n};\n\nfunction Issue({ issue }) {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [text, setText] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const onSubmit = () => {\n    if (!text) {\n      return;\n    }\n    if (!description) {\n      return;\n    }\n    setText('');\n    setDescription('');\n    closeModal();\n  };\n\n  const onChangeText = (e) => {\n    setText(e.target.value);\n  };\n\n  const onChangeDescription = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const onCgangeSearch = () => {\n    const a = issue[0];\n    console.log(a);\n  };\n  return (\n    <Section>\n      <Container>\n        <Action>\n          <Inheader>\n            <Issueheader>Issue</Issueheader>\n            <Searchblock>\n              <Searchtext className=\"text-field-container\">\n                <Searchinput\n                  type=\"input\"\n                  placeholder=\"issue名で検索\"\n                  onChange={onCgangeSearch}\n                />\n              </Searchtext>\n            </Searchblock>\n            <ActionButtons>\n              <Newbutton onClick={() => openModal()}>New</Newbutton>\n              <Deletebutton>Delete</Deletebutton>\n            </ActionButtons>\n          </Inheader>\n        </Action>\n        <Lists>\n          <Issuetable>\n            <thead>\n              <tr>\n                <th>\n                  <input type=\"checkbox\" />\n                </th>\n                <th></th>\n                <th>ステータス</th>\n                <th>作成者</th>\n                <th>作成日付</th>\n                <th>更新日付</th>\n              </tr>\n            </thead>\n            <React.Fragment>\n              <GlobalStyle />\n            </React.Fragment>\n            <Modal\n              isOpen={modalIsOpen}\n              onRequestClose={closeModal}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n              <Modallabel>\n                <Modallabeltext>Issueを追加</Modallabeltext>\n                <Modalcontents>\n                  <Modalcontentstitle>\n                    <Modalcontentstitlelabel>タイトル</Modalcontentstitlelabel>\n                    <Modalcontentstitleinput>\n                      <Modalcontentstitleinputtext\n                        placeholder=\"タイトルを入力してください\"\n                        value={text}\n                        onChange={onChangeText}\n                      ></Modalcontentstitleinputtext>\n                    </Modalcontentstitleinput>\n                  </Modalcontentstitle>\n                  <Modalcontentsdescription>\n                    <Modalcontentsdescriptiontitle>\n                      説明\n                    </Modalcontentsdescriptiontitle>\n                    <Modalcontentsdescriptiontext>\n                      <Modalcontentsdescriptionyextarea\n                        placeholder=\"説明を入力してください\"\n                        value={description}\n                        onChange={onChangeDescription}\n                      ></Modalcontentsdescriptionyextarea>\n                    </Modalcontentsdescriptiontext>\n                  </Modalcontentsdescription>\n                </Modalcontents>\n                <Alert>\n                  {!description && (\n                    <Alerttext>説明を入力してください</Alerttext>\n                  )}\n                </Alert>\n                <Modalbuttons>\n                  <Modalbuttoncreate onClick={() => onSubmit()}>\n                    作成\n                  </Modalbuttoncreate>\n                  <Modalbuttonexit onClick={() => closeModal()}>\n                    閉じる\n                  </Modalbuttonexit>\n                </Modalbuttons>\n              </Modallabel>\n            </Modal>\n            <tbody>\n              {issue.map((key) => (\n                <Issuetr>\n                  <td>\n                    <input type=\"checkbox\" />\n                  </td>\n                  <td>{key.title}</td>\n                  <td>{key.status}</td>\n                  <td>{key.ctuser}</td>\n                  <td>{key.ctdate}</td>\n                  <td>{key.update}</td>\n                </Issuetr>\n              ))}\n            </tbody>\n          </Issuetable>\n        </Lists>\n      </Container>\n    </Section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { issue: state.issue };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    issue_add: () => dispatch({ type: 'ISSUE_ADD' }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Issue);\n","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/index.js",[],[],["189","190"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/App.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/reportWebVitals.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/store.js",[],[],["191","192"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/home.js",[],[],["193","194"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/profile.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/pullrequest.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/issue.js",["195","196","197","198","199"],[],"import styled, { createGlobalStyle } from 'styled-components';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport Modal from 'react-modal';\nimport Buttons from '../atoms/button';\nimport Statusblock from '../molecules/Statusblock';\nimport Inheaders from '../organisms/inheader';\nimport Modallabeltext from '../atoms/titlelabel';\nimport Titleblock from '../molecules/Titleblock';\nimport Descriptionblock from '../molecules/descriptionblock';\nimport Alert from '../molecules/Alertblock';\n\n\nconst Checkbox = styled.input`\n`;\n\nconst Section = styled.div`\n  padding: 16px;\n`;\n\nconst Container = styled.div`\n  padding: 16px;\n  margin-top: 16px;\n`;\n\nconst Action = styled.div``;\n\nconst Lists = styled.div`\n  overflow: scroll;\n`;\n\nconst Issuetable = styled.table`\n  border: 1px solid rgb(225, 228, 232);\n  border-radius: 6px;\n\n  th:first-child,\n  td:first-child {\n    min-width: auto;\n  }\n\n  th,\n  td {\n    padding: 8px;\n    text-align: left;\n    min-width: 10rem;\n    border-bottom: 1px solid rgb(225, 228, 232);\n  }\n`;\n\nconst Issuetr = styled.tr`\n  cursor: pointer;\n  &:hover {\n    background: rgba(198, 218, 230, 0.25);\n  }\n  `;\n\nconst Modallabel = styled.div`\n  max-width: 598px;\n  margin: auto;\n  textarea {\n    min-height: 150px;\n  }\n  a {\n    width: auto;\n  }\n`;\n\nconst Modalcontents = styled.div`\n  padding: 32px 0px 16px;\n`;\n\nconst Modalcontentstitle = styled.div`\n  padding: 16px;\n`;\n\nconst Modalcontentstitlelabel = styled.label`\n  display: block;\n  padding: 8px 0px;\n`;\n\n\nconst Modalcontentstitleinput = styled.div`\n  border-radius: 6px;\n  border: 1px solid rgb(225, 228, 232);\n`;\n\nconst Modalcontentsdescriptiontext = styled.div`\n  border-radius: 6px;\n  border: 1px solid rgb(225, 228, 232);\n`;\n\nconst Modalbuttons = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: end;\n  justify-content: flex-end;\n  padding: 8px;\n`;\n\nCheckbox.defaultProps = { \n  type: 'checkbox'\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @media (max-width: 576px) {\n    .ReactModal__Content {\n      width: 100%;\n      right: 0px !important;\n      left: 0px !important;\n    }\n  }\n  .ReactModal__Content {\n    margin: auto;\n    width: 60%;\n  }\n`;\n\nconst customStyles = {\n  content: {\n    position: 'absolute',\n    inset: '40px',\n    border: '1px solid rgb(204, 204, 204)',\n    background: 'rgb(255, 255, 255)',\n    overflow: 'auto',\n    borderradius: '4px',\n    outline: 'none',\n    padding: '20px',\n  },\n};\n\nfunction Issue({ issue,add_issue,edit_issue,delete_issue }) {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [modalIsOpenEdit, setIsOpenEdit] = React.useState(false);\n  const [text, setText] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [vals, setVal] = React.useState('');\n  const [textedit, setTextEdit] = React.useState('');\n  const [descriptionedit, setDescriptionEdit] = React.useState('');\n  const [statusedit, setStatusEdit] = React.useState('');\n  const [error, setError] = React.useState('');\n  const [erroredit, setErroredit] = React.useState('');\n  const [check, setcheck] = React.useState([]);\n\n  const List = Object.values(issue);\n  const Status = ['Open','Close']\n\n  const onSubmit = () => {\n    if (!text) {\n      setError({message:'タイトル'})\n      return\n    }\n    if (!description) {\n      setError({message:'説明'})\n      return\n    }\n\n    add_issue({title:text,description:description})\n    setError('');\n    setText('');\n    setDescription('');\n    setIsOpen(false)\n  };\n\n  const onSubmitEdit = () => {\n    if(!textedit){\n      setErroredit({message:'タイトル'})\n      return;\n    }\n    if(!descriptionedit){\n      \n      setErroredit({message:'説明'})\n      return;\n    }\n    edit_issue({id:vals.id,textedit:textedit,descriptionedit:descriptionedit,statusedit:statusedit})\n    setErroredit()\n    setIsOpenEdit(false)\n  }\n  \n  const openEdit = (val) => {\n    setIsOpenEdit(true)\n    setVal(val)\n    setTextEdit(val.title)\n    setDescriptionEdit(val.description)\n    setStatusEdit(val.status)\n  }\n\n  const closeModal = () => {\n    setText('')\n    setDescription('')\n    setError('')\n    setIsOpen(false)\n  }\n\n  const closeModalEdit = () => {\n    setErroredit('')\n    setIsOpenEdit(false)\n  }\n\n  const checkedbox = (e) => {\n    e.stopPropagation()\n    const { id, checked } = e.target\n    setcheck([...check, id])\n    if (!checked) {\n      setcheck(check.filter(item => item !== id))\n    }\n  }\n\n  const AllChecked = () => {\n    if(check.length === List.length){\n      setcheck([])\n    }else{\n      const tmp = List.map(function(val){\n        return val.id.toString()\n      });\n      setcheck(tmp)\n    }\n  }\n\n  return (\n    <Section>\n      <Container>\n        <Action>\n            <Inheaders open={() => setIsOpen(true)} delete={() => delete_issue(check)} />\n        </Action>\n        <Lists>\n          <Issuetable>\n            <thead>\n              <tr>\n                <th>\n                  <input type=\"checkbox\" onChange={AllChecked}/>\n                </th>\n                <th></th>\n                <th>ステータス</th>\n                <th>作成者</th>\n                <th>作成日付</th>\n                <th>更新日付</th>\n              </tr>\n            </thead>\n            <React.Fragment>\n              <GlobalStyle />\n            </React.Fragment>\n\n            <Modal\n              isOpen={modalIsOpen}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n              <Modallabel>\n                <Modallabeltext>Issueを追加</Modallabeltext>\n                <Modalcontents>\n                  <Titleblock \n                  onChange={e => setText(e.target.value)}\n                  placeholder=\"タイトルを入力してください\"\n                  />\n                  <Descriptionblock \n                  onChange={e => setDescription(e.target.value)}\n                  placeholder=\"説明を入力してください\"\n                  />\n                </Modalcontents>\n                <Alert error={error} />\n                <Modalbuttons>\n                  <Buttons color=\"white\" background=\"rgb(66, 195, 96)\" borderbottom=\"2px solid rgb(40, 167, 69)\" onClick={() => onSubmit()}>\n                    作成\n                  </Buttons>\n                  <Buttons onClick={closeModal}>\n                    閉じる\n                  </Buttons>\n                </Modalbuttons>\n              </Modallabel>\n            </Modal>\n\n            <Modal\n              isOpen={modalIsOpenEdit}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n              <Modallabel>\n                <Modallabeltext>Issueを追加</Modallabeltext>\n                <Modalcontents>\n                  <Titleblock \n                  default={vals.title} \n                  onChange={e => setTextEdit(e.target.value)}\n                  placeholder=\"タイトルを入力してください\"\n                  />\n                  <Descriptionblock \n                  default={vals.description} \n                  onChange={e => setDescriptionEdit(e.target.value)}\n                  placeholder=\"説明を入力してください\"\n                  />\n                </Modalcontents>\n                <Statusblock \n                onChange={e => setStatusEdit(e.target.value)}\n                />\n                <Modalbuttons>\n                <Alert error={error} />\n                  <Buttons \n                  color=\"white\" \n                  background=\"rgb(66, 195, 96)\" \n                  borderbottom=\"2px solid rgb(40, 167, 69)\" \n                  onClick={() => onSubmitEdit()}\n                  >\n                    更新\n                  </Buttons>\n                  <Buttons onClick={() => closeModalEdit()}>\n                    閉じる\n                  </Buttons>\n                </Modalbuttons>\n              </Modallabel>\n            </Modal>\n\n            <tbody>\n              {List.map((val,key) =>\n                <Issuetr key={key} onClick={() => openEdit(val)}>\n                  <td>\n                    <Checkbox \n                    id={val.id}\n                    onClick={checkedbox}\n                    checked={check.includes(val.id.toString())}\n                    />\n                  </td>\n                  <td>{val.title}</td>\n                  <td>{Status[val.status]}</td>\n                  <td>{val.ctuser}</td>\n                  <td>{val.ctdate}</td>\n                  <td>{val.update}</td>\n                </Issuetr>\n              )}\n            </tbody>\n          </Issuetable>\n        </Lists>\n      </Container>\n    </Section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { issue: state.data };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    add_issue: (list) => dispatch({ type: 'add_issue', payload: list }),\n    edit_issue: (edittxt) => dispatch({type: 'edit_issue', payload: edittxt}),\n    delete_issue: (list) => dispatch({ type: 'delete_issue', payload: list }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Issue);",["200","201"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/user.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/searchblock.js",[],[],["202","203"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/searchinput.js",[],[],["204","205"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/checkbox.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/button.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/organisms/inheader.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/ActionButtons.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/description.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/titleform.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/titlelabel.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/titleblock.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/descriptionblock.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/Titleblock.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/select_status.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/Statusblock.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/alerttext.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/Alertblock.js",[],[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"206","replacedBy":"216"},{"ruleId":"208","replacedBy":"217"},{"ruleId":"210","replacedBy":"218"},{"ruleId":"212","replacedBy":"219"},{"ruleId":"214","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":282,"column":5,"nodeType":"223","messageId":"224","endLine":282,"endColumn":16},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"225","replacedBy":"229"},{"ruleId":"227","replacedBy":"230"},{"ruleId":"225","replacedBy":"231"},{"ruleId":"227","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":72,"column":7,"nodeType":"235","messageId":"236","endLine":72,"endColumn":25},{"ruleId":"233","severity":1,"message":"237","line":76,"column":7,"nodeType":"235","messageId":"236","endLine":76,"endColumn":30},{"ruleId":"233","severity":1,"message":"238","line":82,"column":7,"nodeType":"235","messageId":"236","endLine":82,"endColumn":30},{"ruleId":"233","severity":1,"message":"239","line":87,"column":7,"nodeType":"235","messageId":"236","endLine":87,"endColumn":35},{"ruleId":"233","severity":1,"message":"240","line":142,"column":10,"nodeType":"235","messageId":"236","endLine":142,"endColumn":19},{"ruleId":"225","replacedBy":"241"},{"ruleId":"227","replacedBy":"242"},{"ruleId":"225","replacedBy":"243"},{"ruleId":"227","replacedBy":"244"},{"ruleId":"225","replacedBy":"245"},{"ruleId":"227","replacedBy":"246"},"lines-around-directive",["247"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["247"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-native-reassign",["248"],"no-negated-in-lhs",["249"],["248"],["249"],["248"],["249"],"no-unused-vars","'Modalcontentstitle' is assigned a value but never used.","Identifier","unusedVar","'Modalcontentstitlelabel' is assigned a value but never used.","'Modalcontentstitleinput' is assigned a value but never used.","'Modalcontentsdescriptiontext' is assigned a value but never used.","'erroredit' is assigned a value but never used.",["248"],["249"],["248"],["249"],["248"],["249"],"padding-line-between-statements","no-global-assign","no-unsafe-negation"]