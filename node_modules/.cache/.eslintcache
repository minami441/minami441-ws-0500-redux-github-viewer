[{"/Users/minami/Desktop/redux-github-viewer/src/index.js":"1","/Users/minami/Desktop/redux-github-viewer/src/App.js":"2","/Users/minami/Desktop/redux-github-viewer/src/reportWebVitals.js":"3","/Users/minami/Desktop/redux-github-viewer/src/components/templates/home.js":"4","/Users/minami/Desktop/redux-github-viewer/src/components/templates/profile.js":"5","/Users/minami/Desktop/redux-github-viewer/src/components/templates/pullrequest.js":"6","/Users/minami/Desktop/redux-github-viewer/src/components/store.js":"7","/Users/minami/Desktop/redux-github-viewer/src/components/templates/issue.js":"8","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/index.js":"9","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/App.js":"10","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/reportWebVitals.js":"11","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/store.js":"12","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/home.js":"13","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/profile.js":"14","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/pullrequest.js":"15","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/issue.js":"16","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/user.js":"17","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/searchblock.js":"18","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/searchinput.js":"19","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/checkbox.js":"20","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/button.js":"21","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/organisms/inheader.js":"22","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/ActionButtons.js":"23","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/description.js":"24","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/titleform.js":"25","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/titlelabel.js":"26","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/titleblock.js":"27","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/descriptionblock.js":"28"},{"size":550,"mtime":1652184318685,"results":"29","hashOfConfig":"30"},{"size":3445,"mtime":1652579672518,"results":"31","hashOfConfig":"30"},{"size":364,"mtime":1650156905045,"results":"32","hashOfConfig":"30"},{"size":2492,"mtime":1652579534114,"results":"33","hashOfConfig":"30"},{"size":1661,"mtime":1652103275284,"results":"34","hashOfConfig":"30"},{"size":415,"mtime":1651579703625,"results":"35","hashOfConfig":"30"},{"size":921,"mtime":1652589222537,"results":"36","hashOfConfig":"30"},{"size":9033,"mtime":1652584074523,"results":"37","hashOfConfig":"30"},{"size":550,"mtime":1652605518757,"results":"38","hashOfConfig":"39"},{"size":3445,"mtime":1652605544869,"results":"40","hashOfConfig":"39"},{"size":364,"mtime":1650156905045,"results":"41","hashOfConfig":"39"},{"size":2330,"mtime":1653481268904,"results":"42","hashOfConfig":"39"},{"size":2412,"mtime":1658112621998,"results":"43","hashOfConfig":"39"},{"size":1876,"mtime":1653218616103,"results":"44","hashOfConfig":"39"},{"size":415,"mtime":1652612817000,"results":"45","hashOfConfig":"39"},{"size":10371,"mtime":1658664468037,"results":"46","hashOfConfig":"39"},{"size":84,"mtime":1653217291788,"results":"47","hashOfConfig":"39"},{"size":594,"mtime":1654703586135,"results":"48","hashOfConfig":"39"},{"size":209,"mtime":1654172846794,"results":"49","hashOfConfig":"39"},{"size":100,"mtime":1654312652679,"results":"50","hashOfConfig":"39"},{"size":544,"mtime":1658656759650,"results":"51","hashOfConfig":"39"},{"size":1412,"mtime":1658662789093,"results":"52","hashOfConfig":"39"},{"size":651,"mtime":1658117222863,"results":"53","hashOfConfig":"39"},{"size":266,"mtime":1654700837209,"results":"54","hashOfConfig":"39"},{"size":255,"mtime":1654789632544,"results":"55","hashOfConfig":"39"},{"size":131,"mtime":1654702400840,"results":"56","hashOfConfig":"39"},{"size":733,"mtime":1656162320464,"results":"57","hashOfConfig":"39"},{"size":642,"mtime":1658664783591,"results":"58","hashOfConfig":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1lcd5aq",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"119aix4",{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"103"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/minami/Desktop/redux-github-viewer/src/index.js",[],[],["152","153","154","155","156"],"/Users/minami/Desktop/redux-github-viewer/src/App.js",[],[],"/Users/minami/Desktop/redux-github-viewer/src/reportWebVitals.js",[],[],["157","158","159","160","161"],"/Users/minami/Desktop/redux-github-viewer/src/components/templates/home.js",[],[],"/Users/minami/Desktop/redux-github-viewer/src/components/templates/profile.js",[],[],"/Users/minami/Desktop/redux-github-viewer/src/components/templates/pullrequest.js",[],[],"/Users/minami/Desktop/redux-github-viewer/src/components/store.js",[],[],"/Users/minami/Desktop/redux-github-viewer/src/components/templates/issue.js",["162"],[],"import styled, { createGlobalStyle } from 'styled-components';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport Modal from 'react-modal';\n\nconst Section = styled.div`\n  padding: 16px;\n`;\n\nconst Container = styled.div`\n  padding: 16px;\n  margin-top: 16px;\n`;\n\nconst Action = styled.div``;\n\nconst Inheader = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n`;\n\nconst Issueheader = styled.h2``;\n\nconst Searchblock = styled.div`\n  padding: 8px 16px;\n  display: flex;\n  width: 100%;\n  .text-field-container {\n    width: 100%;\n  }\n`;\n\nconst Searchtext = styled.div`\n  border-radius: 6px;\n  border: 1px solid rgb(225, 228, 232);\n`;\n\nconst Searchinput = styled.input`\n  padding: 8px;\n  border: none;\n  outline: none;\n  background: none;\n  font-size: 1rem;\n  width: 100%;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n`;\n\nconst Newbutton = styled.a`\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  text-align: center;\n  padding: 4px 16px;\n  margin: 4px;\n  min-width: 100px;\n  border-radius: 6px;\n  color: white;\n  font-size: 1rem;\n  background: rgb(66, 195, 96);\n  border-bottom: 2px solid rgb(40, 167, 69);\n`;\n\nconst Deletebutton = styled.a`\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  text-align: center;\n  padding: 4px 16px;\n  margin: 4px;\n  min-width: 100px;\n  border-radius: 6px;\n  color: white;\n  font-size: 1rem;\n  background: rgb(215, 58, 73);\n  border-bottom: 2px solid rgb(175, 28, 42);\n`;\n\nconst Lists = styled.div`\n  overflow: scroll;\n`;\n\nconst Issuetable = styled.table`\n  border: 1px solid rgb(225, 228, 232);\n  border-radius: 6px;\n\n  th:first-child,\n  td:first-child {\n    min-width: auto;\n  }\n\n  th,\n  td {\n    padding: 8px;\n    text-align: left;\n    min-width: 10rem;\n    border-bottom: 1px solid rgb(225, 228, 232);\n  }\n`;\n\nconst Issuetr = styled.tr`\n  cursor: pointer;\n`;\n\nconst Modallabel = styled.div`\n  max-width: 598px;\n  margin: auto;\n  textarea {\n    min-height: 150px;\n  }\n  a {\n    width: auto;\n  }\n`;\n\nconst Modallabeltext = styled.h2`\n  padding: 0px 8px;\n`;\n\nconst Modalcontents = styled.div`\n  padding: 32px 0px 16px;\n`;\n\nconst Modalcontentstitle = styled.div`\n  padding: 16px;\n`;\n\nconst Modalcontentstitlelabel = styled.label`\n  display: block;\n  padding: 8px 0px;\n`;\n\nconst Modalcontentstitleinput = styled.div`\n  border-radius: 6px;\n  border: 1px solid rgb(225, 228, 232);\n`;\n\nconst Modalcontentstitleinputtext = styled.input`\n  padding: 8px;\n  border: none;\n  outline: none;\n  background: none;\n  font-size: 1rem;\n  width: 100%;\n`;\n\nconst Modalcontentsdescription = styled.div`\n  padding: 16px;\n`;\n\nconst Modalcontentsdescriptiontitle = styled.label`\n  display: block;\n  padding: 8px 0px;\n`;\n\nconst Modalcontentsdescriptiontext = styled.div`\n  border-radius: 6px;\n  border: 1px solid rgb(225, 228, 232);\n`;\n\nconst Modalcontentsdescriptionyextarea = styled.textarea`\n  padding: 8px;\n  border: none;\n  outline: none;\n  background: none;\n  font-size: 1rem;\n  width: 100%;\n`;\n\nconst Modalbuttons = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: end;\n  justify-content: flex-end;\n  padding: 8px;\n`;\n\nconst Modalbuttoncreate = styled.a`\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  text-align: center;\n  padding: 4px 16px;\n  margin: 4px;\n  min-width: 100px;\n  border-radius: 6px;\n  color: white;\n  font-size: 1rem;\n  background: rgb(66, 195, 96);\n  border-bottom: 2px solid rgb(40, 167, 69);\n`;\n\nconst Modalbuttonexit = styled.a`\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  text-align: center;\n  padding: 4px 16px;\n  margin: 4px;\n  min-width: 100px;\n  border-radius: 6px;\n  font-size: 1rem;\n`;\n\nconst Alert = styled.div`\n  padding: 16px;\n  min-height: 100px;\n`;\n\nconst Alerttext = styled.p`\n  color: rgb(215, 58, 73);\n  background: rgba(215, 58, 73, 0.35);\n  padding: 8px;\n  border-radius: 6px;\n`;\nconst GlobalStyle = createGlobalStyle`\n  @media (max-width: 576px) {\n    .ReactModal__Content {\n      width: 100%;\n      right: 0px !important;\n      left: 0px !important;\n    }\n  }\n  .ReactModal__Content {\n    margin: auto;\n    width: 60%;\n  }\n`;\n\nconst customStyles = {\n  content: {\n    position: 'absolute',\n    inset: '40px',\n    border: '1px solid rgb(204, 204, 204)',\n    background: 'rgb(255, 255, 255)',\n    overflow: 'auto',\n    borderradius: '4px',\n    outline: 'none',\n    padding: '20px',\n  },\n};\n\nfunction Issue({ issue }) {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [text, setText] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const onSubmit = () => {\n    if (!text) {\n      return;\n    }\n    if (!description) {\n      return;\n    }\n    setText('');\n    setDescription('');\n    closeModal();\n  };\n\n  const onChangeText = (e) => {\n    setText(e.target.value);\n  };\n\n  const onChangeDescription = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const onCgangeSearch = () => {\n    const a = issue[0];\n    console.log(a);\n  };\n  return (\n    <Section>\n      <Container>\n        <Action>\n          <Inheader>\n            <Issueheader>Issue</Issueheader>\n            <Searchblock>\n              <Searchtext className=\"text-field-container\">\n                <Searchinput\n                  type=\"input\"\n                  placeholder=\"issue名で検索\"\n                  onChange={onCgangeSearch}\n                />\n              </Searchtext>\n            </Searchblock>\n            <ActionButtons>\n              <Newbutton onClick={() => openModal()}>New</Newbutton>\n              <Deletebutton>Delete</Deletebutton>\n            </ActionButtons>\n          </Inheader>\n        </Action>\n        <Lists>\n          <Issuetable>\n            <thead>\n              <tr>\n                <th>\n                  <input type=\"checkbox\" />\n                </th>\n                <th></th>\n                <th>ステータス</th>\n                <th>作成者</th>\n                <th>作成日付</th>\n                <th>更新日付</th>\n              </tr>\n            </thead>\n            <React.Fragment>\n              <GlobalStyle />\n            </React.Fragment>\n            <Modal\n              isOpen={modalIsOpen}\n              onRequestClose={closeModal}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n              <Modallabel>\n                <Modallabeltext>Issueを追加</Modallabeltext>\n                <Modalcontents>\n                  <Modalcontentstitle>\n                    <Modalcontentstitlelabel>タイトル</Modalcontentstitlelabel>\n                    <Modalcontentstitleinput>\n                      <Modalcontentstitleinputtext\n                        placeholder=\"タイトルを入力してください\"\n                        value={text}\n                        onChange={onChangeText}\n                      ></Modalcontentstitleinputtext>\n                    </Modalcontentstitleinput>\n                  </Modalcontentstitle>\n                  <Modalcontentsdescription>\n                    <Modalcontentsdescriptiontitle>\n                      説明\n                    </Modalcontentsdescriptiontitle>\n                    <Modalcontentsdescriptiontext>\n                      <Modalcontentsdescriptionyextarea\n                        placeholder=\"説明を入力してください\"\n                        value={description}\n                        onChange={onChangeDescription}\n                      ></Modalcontentsdescriptionyextarea>\n                    </Modalcontentsdescriptiontext>\n                  </Modalcontentsdescription>\n                </Modalcontents>\n                <Alert>\n                  {!description && (\n                    <Alerttext>説明を入力してください</Alerttext>\n                  )}\n                </Alert>\n                <Modalbuttons>\n                  <Modalbuttoncreate onClick={() => onSubmit()}>\n                    作成\n                  </Modalbuttoncreate>\n                  <Modalbuttonexit onClick={() => closeModal()}>\n                    閉じる\n                  </Modalbuttonexit>\n                </Modalbuttons>\n              </Modallabel>\n            </Modal>\n            <tbody>\n              {issue.map((key) => (\n                <Issuetr>\n                  <td>\n                    <input type=\"checkbox\" />\n                  </td>\n                  <td>{key.title}</td>\n                  <td>{key.status}</td>\n                  <td>{key.ctuser}</td>\n                  <td>{key.ctdate}</td>\n                  <td>{key.update}</td>\n                </Issuetr>\n              ))}\n            </tbody>\n          </Issuetable>\n        </Lists>\n      </Container>\n    </Section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { issue: state.issue };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    issue_add: () => dispatch({ type: 'ISSUE_ADD' }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Issue);\n","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/index.js",[],[],["163","164"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/App.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/reportWebVitals.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/store.js",[],[],["165","166"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/home.js",[],[],["167","168"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/profile.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/pullrequest.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/templates/issue.js",["169"],[],"import styled, { createGlobalStyle } from 'styled-components';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport Modal from 'react-modal';\nimport Buttons from '../atoms/button';\nimport Inheaders from '../organisms/inheader';\n\nimport Modalcontentstitleinputtext from '../atoms/titleform';\nimport Modallabeltext from '../atoms/titlelabel';\nimport Titleblock from '../molecules/titleblock';\nimport Descriptionblock from '../molecules/descriptionblock';\n\n\nconst Checkbox = styled.input`\n`;\n\nconst Section = styled.div`\n  padding: 16px;\n`;\n\nconst Container = styled.div`\n  padding: 16px;\n  margin-top: 16px;\n`;\n\nconst Action = styled.div``;\n\nconst Lists = styled.div`\n  overflow: scroll;\n`;\n\nconst Issuetable = styled.table`\n  border: 1px solid rgb(225, 228, 232);\n  border-radius: 6px;\n\n  th:first-child,\n  td:first-child {\n    min-width: auto;\n  }\n\n  th,\n  td {\n    padding: 8px;\n    text-align: left;\n    min-width: 10rem;\n    border-bottom: 1px solid rgb(225, 228, 232);\n  }\n`;\n\nconst Issuetr = styled.tr`\n  cursor: pointer;\n  &:hover {\n    background: rgba(198, 218, 230, 0.25);\n  }\n  `;\n\nconst Modallabel = styled.div`\n  max-width: 598px;\n  margin: auto;\n  textarea {\n    min-height: 150px;\n  }\n  a {\n    width: auto;\n  }\n`;\n\nconst Modalcontents = styled.div`\n  padding: 32px 0px 16px;\n`;\n\nconst Modalcontentstitle = styled.div`\n  padding: 16px;\n`;\n\nconst Modalcontentstitlelabel = styled.label`\n  display: block;\n  padding: 8px 0px;\n`;\n\nconst Modalcontentstitleinput = styled.div`\n  border-radius: 6px;\n  border: 1px solid rgb(225, 228, 232);\n`;\n\nconst Modalcontentsdescription = styled.div`\n  padding: 16px;\n`;\n\nconst Modalcontentsdescriptiontitle = styled.label`\n  display: block;\n  padding: 8px 0px;\n`;\n\nconst Modalcontentsdescriptiontext = styled.div`\n  border-radius: 6px;\n  border: 1px solid rgb(225, 228, 232);\n`;\n\nconst Modalbuttons = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: end;\n  justify-content: flex-end;\n  padding: 8px;\n`;\n\nconst Alert = styled.div`\n  padding: 16px;\n  min-height: 100px;\n`;\n\nconst Alerttext = styled.p`\n  color: rgb(215, 58, 73);\n  background: rgba(215, 58, 73, 0.35);\n  padding: 8px;\n  border-radius: 6px;\n`;\n\nconst Statusarea = styled.div`\n  padding: 16px;\n`;\n\nconst Statuslabel = styled.label`\n  display: block;\n  padding: 8px 0px;\n`;\n\nCheckbox.defaultProps = { \n  type: 'checkbox'\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @media (max-width: 576px) {\n    .ReactModal__Content {\n      width: 100%;\n      right: 0px !important;\n      left: 0px !important;\n    }\n  }\n  .ReactModal__Content {\n    margin: auto;\n    width: 60%;\n  }\n`;\n\nconst customStyles = {\n  content: {\n    position: 'absolute',\n    inset: '40px',\n    border: '1px solid rgb(204, 204, 204)',\n    background: 'rgb(255, 255, 255)',\n    overflow: 'auto',\n    borderradius: '4px',\n    outline: 'none',\n    padding: '20px',\n  },\n};\n\nfunction Issue({ issue,add_issue,edit_issue,delete_issue }) {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [modalIsOpenEdit, setIsOpenEdit] = React.useState(false);\n  const [text, setText] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [vals, setVal] = React.useState('');\n  const [textedit, settextedit] = React.useState('');\n  const [descriptionedit, setdescriptionedit] = React.useState('');\n  const [statusedit, setstatusedit] = React.useState('');\n  const [error, setError] = React.useState('');\n  const [erroredit, setErroredit] = React.useState('');\n  const [check, setcheck] = React.useState([]);\n\n  const List = Object.values(issue);\n  const Status = ['Open','Close']\n\n  const onSubmit = () => {\n    if (!text) {\n      setError({message:'タイトル'})\n      return\n    }\n    if (!description) {\n      setError({message:'説明'})\n      return\n    }\n\n    add_issue({title:text,description:description})\n    setError('');\n    setText('');\n    setDescription('');\n    setIsOpen(false)\n  };\n\n  const onSubmitEdit = () => {\n    if(!textedit){\n      setErroredit({message:'タイトル'})\n      return;\n    }\n    if(!descriptionedit){\n      setErroredit({message:'説明'})\n      return;\n    }\n    edit_issue({id:vals.id,textedit:textedit,descriptionedit:descriptionedit,statusedit:statusedit})\n    setErroredit()\n    setIsOpenEdit(false)\n  }\n  \n  const openEdit = (val) => {\n    \n    setIsOpenEdit(true)\n    setVal(val)\n    settextedit(val.title)\n    setdescriptionedit(val.description)\n    setstatusedit(val.status)\n  }\n\n  const closeModal = () => {\n    setText('')\n    setDescription('')\n    setIsOpen(false)\n  }\n\n  const closeModalEdit = () => {\n    setErroredit('')\n    setIsOpenEdit(false)\n  }\n\n  const onChangeText = (e) => {\n    setText(e.target.value)\n  };\n\n  const onChangeDescription = (e) => {\n    setDescription(e.target.value)\n  };\n\n  const checkedbox = (e) => {\n    e.stopPropagation()\n    const { id, checked } = e.target\n    setcheck([...check, id])\n    if (!checked) {\n      setcheck(check.filter(item => item !== id))\n    }\n  }\n\n  const AllChecked = () => {\n    if(check.length === List.length){\n      setcheck([])\n    }else{\n      const tmp = List.map(function(val){\n        return val.id.toString()\n      });\n      setcheck(tmp)\n    }\n  }\n\n  return (\n    <Section>\n      <Container>\n        <Action>\n            <Inheaders open={() => setIsOpen(true)} delete={() => delete_issue(check)} />\n        </Action>\n        <Lists>\n          <Issuetable>\n            <thead>\n              <tr>\n                <th>\n                  <input type=\"checkbox\" onChange={AllChecked}/>\n                </th>\n                <th></th>\n                <th>ステータス</th>\n                <th>作成者</th>\n                <th>作成日付</th>\n                <th>更新日付</th>\n              </tr>\n            </thead>\n            <React.Fragment>\n              <GlobalStyle />\n            </React.Fragment>\n\n            <Modal\n              isOpen={modalIsOpen}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n              <Modallabel>\n                <Modallabeltext>Issueを追加</Modallabeltext>\n                <Modalcontents>\n                  <Modalcontentstitle>\n                    <Modalcontentstitlelabel>タイトル</Modalcontentstitlelabel>\n                    <Modalcontentstitleinput>\n                      <Modalcontentstitleinputtext\n                        placeholder=\"タイトルを入力してください\"\n                        value={text}\n                        onChange={onChangeText}\n                      ></Modalcontentstitleinputtext>\n                    </Modalcontentstitleinput>\n                  </Modalcontentstitle>\n                  <Modalcontentsdescription>\n                    <Modalcontentsdescriptiontitle>\n                      説明\n                    </Modalcontentsdescriptiontitle>\n                      <Descriptionblock default={vals.description} onChange={e => setdescriptionedit(e.target.value)}/>\n                  </Modalcontentsdescription>\n                </Modalcontents>\n                <Alert>\n                {error &&\n                    <Alerttext>{error.message}を入力してください</Alerttext>\n                }\n                </Alert>\n                <Modalbuttons>\n                  <Buttons color=\"white\" background=\"rgb(66, 195, 96)\" borderbottom=\"2px solid rgb(40, 167, 69)\" onClick={() => onSubmit()}>\n                    作成\n                  </Buttons>\n                  <Buttons onClick={() => closeModal()}>\n                    閉じる\n                  </Buttons>\n                </Modalbuttons>\n              </Modallabel>\n            </Modal>\n\n            <Modal\n              isOpen={modalIsOpenEdit}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n              <Modallabel>\n                <Modallabeltext>Issueを追加</Modallabeltext>\n                <Modalcontents>\n                  <Titleblock default={vals.title} placeholder=\"説明を入力してください\"/>\n                  \n                  <Modalcontentsdescription>\n                    <Modalcontentsdescriptiontitle>\n                      説明\n                    </Modalcontentsdescriptiontitle>\n                    <Modalcontentsdescriptiontext>\n\n                    </Modalcontentsdescriptiontext>\n                  </Modalcontentsdescription>\n                </Modalcontents>\n                <Statusarea>\n                  <Statuslabel>\n                    ステータス\n                  </Statuslabel>\n                </Statusarea>\n                <Alert>\n                {erroredit &&\n                    <Alerttext>{erroredit.message}を入力してください</Alerttext>\n                }\n                </Alert>\n                <Modalbuttons>\n                  <Buttons color=\"white\" background=\"rgb(66, 195, 96)\" borderbottom=\"2px solid rgb(40, 167, 69)\" onClick={() => onSubmitEdit()}>\n                    更新\n                  </Buttons>\n                  <Buttons onClick={() => closeModalEdit()}>\n                    閉じる\n                  </Buttons>\n                </Modalbuttons>\n              </Modallabel>\n            </Modal>\n\n            <tbody>\n              {List.map((val,key) =>\n                <Issuetr key={key} onClick={() => openEdit(val)}>\n                  <td>\n                    <Checkbox \n                    id={val.id}\n                    onClick={checkedbox}\n                    checked={check.includes(val.id.toString())}\n                    />\n                  </td>\n                  <td>{val.title}</td>\n                  <td>{Status[val.status]}</td>\n                  <td>{val.ctuser}</td>\n                  <td>{val.ctdate}</td>\n                  <td>{val.update}</td>\n                </Issuetr>\n              )}\n            </tbody>\n          </Issuetable>\n        </Lists>\n      </Container>\n    </Section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { issue: state.data };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    add_issue: (list) => dispatch({ type: 'add_issue', payload: list }),\n    edit_issue: (edittxt) => dispatch({type: 'edit_issue', payload: edittxt}),\n    delete_issue: (list) => dispatch({ type: 'delete_issue', payload: list }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Issue);\n","/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/user.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/searchblock.js",[],[],["170","171"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/searchinput.js",[],[],["172","173"],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/checkbox.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/button.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/organisms/inheader.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/ActionButtons.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/description.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/titleform.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/atoms/titlelabel.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/titleblock.js",[],[],"/Users/minami/Desktop/minami441-ws-0500-redux-github-viewer/src/components/molecules/descriptionblock.js",[],[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"174","replacedBy":"184"},{"ruleId":"176","replacedBy":"185"},{"ruleId":"178","replacedBy":"186"},{"ruleId":"180","replacedBy":"187"},{"ruleId":"182","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":282,"column":5,"nodeType":"191","messageId":"192","endLine":282,"endColumn":16},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"193","replacedBy":"197"},{"ruleId":"195","replacedBy":"198"},{"ruleId":"193","replacedBy":"199"},{"ruleId":"195","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":232,"column":9,"nodeType":"203","messageId":"204","endLine":232,"endColumn":28},{"ruleId":"193","replacedBy":"205"},{"ruleId":"195","replacedBy":"206"},{"ruleId":"193","replacedBy":"207"},{"ruleId":"195","replacedBy":"208"},"lines-around-directive",["209"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["209"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-native-reassign",["210"],"no-negated-in-lhs",["211"],["210"],["211"],["210"],["211"],"no-unused-vars","'onChangeDescription' is assigned a value but never used.","Identifier","unusedVar",["210"],["211"],["210"],["211"],"padding-line-between-statements","no-global-assign","no-unsafe-negation"]